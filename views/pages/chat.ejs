<%- layout("/layouts/boilerplate.ejs") %>
<head>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    :root {
      --primary-color: #4361ee;
      --primary-light: #e6f0ff;
      --secondary-color: #3f37c9;
      --text-dark: #2b2d42;
      --text-light: #8d99ae;
      --bg-light: #f8f9fa;
      --bg-white: #ffffff;
      --success-color: #4cc9f0;
      --warning-color: #f8961e;
      --error-color: #f94144;
      --border-radius: 12px;
      --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--bg-light);
      color: var(--text-dark);
    }

    /* Main Chat Container */
    .chat-app {
      display: flex;
      max-width: 1200px;
      height: 80vh;
      margin: 40px auto;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--box-shadow);
      background-color: var(--bg-white);
    }

    /* Sidebar */
    .sidebar {
      width: 350px;
      background-color: var(--bg-white);
      border-right: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      flex-direction: column;
    }

    .sidebar-header {
      padding: 20px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .sidebar-header h2 {
      font-size: 1.5rem;
      font-weight: 600;
    }

    .sidebar-actions {
      display: flex;
      gap: 10px;
    }

    .action-btn {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--primary-light);
      color: var(--primary-color);
      border: none;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .action-btn:hover {
      background-color: var(--primary-color);
      color: white;
    }

    .search-bar {
      padding: 15px 20px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .search-bar input {
      width: 100%;
      padding: 10px 15px;
      border-radius: 20px;
      border: none;
      background-color: var(--bg-light);
      font-family: inherit;
      font-size: 0.9rem;
    }

    .search-bar input:focus {
      outline: none;
      box-shadow: 0 0 0 2px var(--primary-light);
    }

    .chat-list {
      flex: 1;
      overflow-y: auto;
    }

    .chat-item {
      display: flex;
      padding: 15px 20px;
      cursor: pointer;
      transition: all 0.2s ease;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .chat-item:hover {
      background-color: var(--bg-light);
    }

    .chat-item.active {
      background-color: var(--primary-light);
      border-left: 3px solid var(--primary-color);
    }

    .chat-avatar {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 15px;
    }

    .chat-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .chat-info-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 5px;
    }

    .chat-name {
      font-weight: 500;
      font-size: 1rem;
    }

    .chat-time {
      font-size: 0.75rem;
      color: var(--text-light);
    }

    .chat-preview {
      display: flex;
      align-items: center;
    }

    .chat-message {
      font-size: 0.85rem;
      color: var(--text-light);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 180px;
    }

    .unread-count {
      background-color: var(--primary-color);
      color: white;
      font-size: 0.7rem;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-left: 5px;
    }

    /* Main Chat Area */
    .chat-area {
      flex: 1;
      display: flex;
      flex-direction: column;
      background-color: var(--bg-white);
    }

    .chat-header {
      padding: 20px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .chat-user {
      display: flex;
      align-items: center;
    }

    .chat-user-avatar {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 15px;
    }

    .chat-user-info h3 {
      font-size: 1.1rem;
      font-weight: 500;
    }

    .chat-user-info p {
      font-size: 0.8rem;
      color: var(--success-color);
      display: flex;
      align-items: center;
    }

    .online-dot {
      width: 8px;
      height: 8px;
      background-color: var(--success-color);
      border-radius: 50%;
      margin-right: 5px;
    }

    .chat-actions {
      display: flex;
      gap: 15px;
      position: relative;
    }

    .dropdown-menu {
      position: absolute;
      top: 40px;
      right: 0;
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 10px 0;
      width: 200px;
      z-index: 10;
      display: none;
    }

    .dropdown-menu.show {
      display: block;
    }

    .dropdown-item {
      padding: 10px 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .dropdown-item:hover {
      background-color: var(--bg-light);
    }

    .dropdown-item i {
      width: 20px;
      text-align: center;
    }

    .messages-container {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
      background-color: var(--bg-light);
      background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%239C92AC' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
    }

    .message {
      display: flex;
      margin-bottom: 15px;
      max-width: 70%;
    }

    .message.received {
      align-self: flex-start;
    }

    .message.sent {
      align-self: flex-end;
      flex-direction: row-reverse;
    }

    .message-avatar {
      width: 35px;
      height: 35px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 10px;
    }

    .message.sent .message-avatar {
      margin-right: 0;
      margin-left: 10px;
    }

    .message-content {
      display: flex;
      flex-direction: column;
    }

    .message-bubble {
      padding: 12px 15px;
      border-radius: 18px;
      font-size: 0.9rem;
      line-height: 1.4;
      position: relative;
    }

    .message.received .message-bubble {
      background-color: var(--bg-white);
      color: var(--text-dark);
      border-top-left-radius: 5px;
    }

    .message.sent .message-bubble {
      background-color: var(--primary-color);
      color: white;
      border-top-right-radius: 5px;
    }

    .message-time {
      font-size: 0.7rem;
      color: var(--text-light);
      margin-top: 5px;
      align-self: flex-end;
    }

    .message.sent .message-time {
      color: var(--text-light);
    }

    .message-status {
      margin-left: 5px;
      font-size: 0.7rem;
    }

    .message.sent .message-status {
      color: rgba(255, 255, 255, 0.7);
    }

    /* Message Input */
    .message-input {
      padding: 15px 20px;
      border-top: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      align-items: center;
      background-color: var(--bg-white);
    }

    .input-container {
      flex: 1;
      display: flex;
      align-items: center;
      background-color: var(--bg-light);
      border-radius: 25px;
      padding: 5px 15px;
    }

    .message-input input {
      flex: 1;
      border: none;
      background: transparent;
      padding: 10px;
      font-family: inherit;
      font-size: 0.95rem;
    }

    .message-input input:focus {
      outline: none;
    }

    .input-actions {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .input-btn {
      background: none;
      border: none;
      color: var(--text-light);
      cursor: pointer;
      font-size: 1.2rem;
      transition: all 0.2s ease;
    }

    .input-btn:hover {
      color: var(--primary-color);
    }

    .send-btn {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      background-color: var(--primary-color);
      color: white;
      border: none;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      margin-left: 15px;
      transition: all 0.2s ease;
    }

    .send-btn:hover {
      background-color: var(--secondary-color);
      transform: scale(1.05);
    }

    /* Emoji Picker */
    .emoji-picker {
      position: absolute;
      bottom: 70px;
      right: 20px;
      width: 300px;
      height: 300px;
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 15px;
      z-index: 100;
      display: none;
      overflow-y: auto;
    }

    .emoji-picker.show {
      display: block;
    }

    .emoji-category {
      margin-bottom: 15px;
    }

    .emoji-category h4 {
      margin-bottom: 10px;
      color: var(--text-light);
      font-size: 0.8rem;
      text-transform: uppercase;
    }

    .emoji-grid {
      display: grid;
      grid-template-columns: repeat(8, 1fr);
      gap: 5px;
    }

    .emoji {
      font-size: 1.5rem;
      cursor: pointer;
      text-align: center;
      padding: 5px;
      border-radius: 5px;
    }

    .emoji:hover {
      background-color: var(--bg-light);
    }

    /* Attachment Menu */
    .attachment-menu {
      position: absolute;
      bottom: 70px;
      left: 20px;
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      padding: 15px;
      z-index: 100;
      width: 250px;
      display: none;
    }

    .attachment-menu.show {
      display: block;
    }

    .attachment-option {
      display: flex;
      align-items: center;
      padding: 10px;
      cursor: pointer;
      border-radius: 5px;
    }

    .attachment-option:hover {
      background-color: var(--bg-light);
    }

    .attachment-option i {
      margin-right: 10px;
      font-size: 1.2rem;
      color: var(--primary-color);
    }

    /* Edit Modal */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .modal.show {
      display: flex;
    }

    .modal-content {
      background-color: white;
      border-radius: var(--border-radius);
      width: 90%;
      max-width: 500px;
      box-shadow: var(--box-shadow);
    }

    .modal-header {
      padding: 20px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .modal-header h3 {
      font-size: 1.2rem;
    }

    .modal-close {
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: var(--text-light);
    }

    .modal-body {
      padding: 20px;
    }

    .modal-footer {
      padding: 15px 20px;
      border-top: 1px solid rgba(0, 0, 0, 0.05);
      display: flex;
      justify-content: flex-end;
      gap: 10px;
    }

    .btn {
      padding: 8px 20px;
      border-radius: 5px;
      cursor: pointer;
      font-family: inherit;
      font-weight: 500;
    }

    .btn-primary {
      background-color: var(--primary-color);
      color: white;
      border: none;
    }

    .btn-secondary {
      background-color: var(--bg-light);
      color: var(--text-dark);
      border: none;
    }

    .form-group {
      margin-bottom: 15px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-size: 0.9rem;
    }

    .form-group input,
    .form-group textarea,
    .form-group select {
      width: 100%;
      padding: 10px;
      border: 1px solid var(--border-color);
      border-radius: 5px;
      font-family: inherit;
    }

    /* Typing Indicator */
    .typing-indicator {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
      padding-left: 15px;
    }

    .typing-indicator span {
      height: 8px;
      width: 8px;
      background-color: var(--text-light);
      border-radius: 50%;
      display: inline-block;
      margin: 0 2px;
      animation: typing 1.5s infinite ease-in-out;
    }

    .typing-indicator span:nth-child(2) {
      animation-delay: 0.2s;
    }

    .typing-indicator span:nth-child(3) {
      animation-delay: 0.4s;
    }

    @keyframes typing {
      0%, 60%, 100% { transform: translateY(0); }
      30% { transform: translateY(-5px); }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .chat-app {
        flex-direction: column;
        height: 90vh;
        margin: 0;
        border-radius: 0;
      }

      .sidebar {
        width: 100%;
        height: 40%;
      }

      .chat-area {
        height: 60%;
      }

      .message {
        max-width: 85%;
      }
    }
  </style>
</head>
<body>
  <div class="chat-app">
    <!-- Sidebar -->
    <div class="sidebar">
      <div class="sidebar-header">
        <h2>Messages</h2>
        <div class="sidebar-actions">
          <button class="action-btn" id="edit-chat-btn">
            <i class="fas fa-edit"></i>
          </button>
          <button class="action-btn" id="settings-btn">
            <i class="fas fa-cog"></i>
          </button>
        </div>
      </div>
      <div class="search-bar">
        <input type="text" id="search-input" placeholder="Search messages...">
      </div>
      <div class="chat-list" id="chat-list">
        <!-- Active Chat -->
        <div class="chat-item active" data-chat-id="1">
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="chat-avatar">
          <div class="chat-info">
            <div class="chat-info-header">
              <span class="chat-name">John (Seller)</span>
              <span class="chat-time">10:08 AM</span>
            </div>
            <div class="chat-preview">
              <span class="chat-message">Sure, what time suits you?</span>
              <span class="unread-count">2</span>
            </div>
          </div>
        </div>
        
        <!-- Other Chats -->
        <div class="chat-item" data-chat-id="2">
          <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="Lisa" class="chat-avatar">
          <div class="chat-info">
            <div class="chat-info-header">
              <span class="chat-name">Lisa (Buyer)</span>
              <span class="chat-time">Yesterday</span>
            </div>
            <div class="chat-preview">
              <span class="chat-message">Thanks for the quick delivery!</span>
            </div>
          </div>
        </div>
        
        <div class="chat-item" data-chat-id="3">
          <img src="https://randomuser.me/api/portraits/women/68.jpg" alt="Maria" class="chat-avatar">
          <div class="chat-info">
            <div class="chat-info-header">
              <span class="chat-name">Maria (Seller)</span>
              <span class="chat-time">Mar 15</span>
            </div>
            <div class="chat-preview">
              <span class="chat-message">The item is ready for pickup</span>
            </div>
          </div>
        </div>
        
        <div class="chat-item" data-chat-id="4">
          <img src="https://randomuser.me/api/portraits/men/75.jpg" alt="Adam" class="chat-avatar">
          <div class="chat-info">
            <div class="chat-info-header">
              <span class="chat-name">Adam (Buyer)</span>
              <span class="chat-time">Mar 10</span>
            </div>
            <div class="chat-preview">
              <span class="chat-message">Can you do ₹2500 for the headphones?</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Chat Area -->
    <div class="chat-area">
      <div class="chat-header">
        <div class="chat-user">
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="chat-user-avatar">
          <div class="chat-user-info">
            <h3>John (Seller)</h3>
            <p><span class="online-dot"></span> Online</p>
          </div>
        </div>
        <div class="chat-actions">
          <button class="action-btn" id="menu-btn">
            <i class="fas fa-ellipsis-v"></i>
          </button>
          <div class="dropdown-menu" id="dropdown-menu">
            <div class="dropdown-item" id="clear-chat">
              <i class="fas fa-trash-alt"></i> Clear Chat
            </div>
            <div class="dropdown-item" id="mute-chat">
              <i class="fas fa-bell-slash"></i> Mute Notifications
            </div>
            <div class="dropdown-item" id="block-user">
              <i class="fas fa-user-slash"></i> Block User
            </div>
            <div class="dropdown-item" id="report-user">
              <i class="fas fa-flag"></i> Report User
            </div>
          </div>
        </div>
      </div>
      
      <div class="messages-container" id="messages-container">
        <!-- Received Message -->
        <div class="message received">
          <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="You" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              Hi, is the laptop still available?
            </div>
            <span class="message-time">10:05 AM</span>
          </div>
        </div>
        
        <!-- Sent Message -->
        <div class="message sent">
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              Yes, it is available and in great condition.
            </div>
            <span class="message-time">10:06 AM <span class="message-status">✓✓</span></span>
          </div>
        </div>
        
        <!-- Received Message -->
        <div class="message received">
          <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="You" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              Can I pick it up tomorrow?
            </div>
            <span class="message-time">10:07 AM</span>
          </div>
        </div>
        
        <!-- Sent Message -->
        <div class="message sent">
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              Sure, what time suits you?
            </div>
            <span class="message-time">10:08 AM <span class="message-status">✓✓</span></span>
          </div>
        </div>
        
        <!-- Typing Indicator -->
        <div class="typing-indicator">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
      
      <div class="message-input">
        <div class="input-container">
          <button class="input-btn" id="emoji-btn">
            <i class="far fa-smile"></i>
          </button>
          <input type="text" placeholder="Type your message..." id="message-input">
          <button class="input-btn" id="attachment-btn">
            <i class="fas fa-paperclip"></i>
          </button>
        </div>
        <button class="send-btn" id="send-btn">
          <i class="fas fa-paper-plane"></i>
        </button>
        
        <!-- Emoji Picker -->
        <div class="emoji-picker" id="emoji-picker">
          <div class="emoji-category">
            <h4>Smileys & People</h4>
            <div class="emoji-grid" id="smileys-people">
              <!-- Emojis will be added by JavaScript -->
            </div>
          </div>
          <div class="emoji-category">
            <h4>Animals & Nature</h4>
            <div class="emoji-grid" id="animals-nature">
              <!-- Emojis will be added by JavaScript -->
            </div>
          </div>
          <div class="emoji-category">
            <h4>Food & Drink</h4>
            <div class="emoji-grid" id="food-drink">
              <!-- Emojis will be added by JavaScript -->
            </div>
          </div>
        </div>
        
        <!-- Attachment Menu -->
        <div class="attachment-menu" id="attachment-menu">
          <div class="attachment-option" id="attach-photo">
            <i class="fas fa-camera"></i>
            <span>Photo or Video</span>
          </div>
          <div class="attachment-option" id="attach-document">
            <i class="fas fa-file"></i>
            <span>Document</span>
          </div>
          <div class="attachment-option" id="attach-location">
            <i class="fas fa-map-marker-alt"></i>
            <span>Location</span>
          </div>
          <div class="attachment-option" id="attach-contact">
            <i class="fas fa-user"></i>
            <span>Contact</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Chat Modal -->
  <div class="modal" id="edit-modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Edit Chat</h3>
        <button class="modal-close" id="edit-modal-close">&times;</button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="chat-title">Chat Title</label>
          <input type="text" id="chat-title" value="John (Seller)">
        </div>
        <div class="form-group">
          <label for="chat-notifications">Notifications</label>
          <select id="chat-notifications">
            <option value="on">On</option>
            <option value="off">Off</option>
            <option value="custom">Custom</option>
          </select>
        </div>
        <div class="form-group">
          <label for="chat-color">Chat Color</label>
          <select id="chat-color">
            <option value="blue">Blue</option>
            <option value="red">Red</option>
            <option value="green">Green</option>
            <option value="purple">Purple</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" id="edit-cancel-btn">Cancel</button>
        <button class="btn btn-primary" id="edit-save-btn">Save Changes</button>
      </div>
    </div>
  </div>

  <!-- Settings Modal -->
  <div class="modal" id="settings-modal">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Settings</h3>
        <button class="modal-close" id="settings-modal-close">&times;</button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="theme">Theme</label>
          <select id="theme">
            <option value="light">Light</option>
            <option value="dark">Dark</option>
            <option value="system">System Default</option>
          </select>
        </div>
        <div class="form-group">
          <label for="notification-sound">Notification Sound</label>
          <select id="notification-sound">
            <option value="default">Default</option>
            <option value="chime">Chime</option>
            <option value="ding">Ding</option>
            <option value="none">None</option>
          </select>
        </div>
        <div class="form-group">
          <label for="message-history">Message History</label>
          <select id="message-history">
            <option value="30">30 days</option>
            <option value="90">90 days</option>
            <option value="forever">Forever</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" id="settings-cancel-btn">Cancel</button>
        <button class="btn btn-primary" id="settings-save-btn">Save Settings</button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // DOM Elements
      const messageInput = document.getElementById('message-input');
      const sendBtn = document.getElementById('send-btn');
      const messagesContainer = document.getElementById('messages-container');
      const typingIndicator = document.querySelector('.typing-indicator');
      const emojiBtn = document.getElementById('emoji-btn');
      const emojiPicker = document.getElementById('emoji-picker');
      const attachmentBtn = document.getElementById('attachment-btn');
      const attachmentMenu = document.getElementById('attachment-menu');
      const menuBtn = document.getElementById('menu-btn');
      const dropdownMenu = document.getElementById('dropdown-menu');
      const editChatBtn = document.getElementById('edit-chat-btn');
      const editModal = document.getElementById('edit-modal');
      const editModalClose = document.getElementById('edit-modal-close');
      const editCancelBtn = document.getElementById('edit-cancel-btn');
      const editSaveBtn = document.getElementById('edit-save-btn');
      const settingsBtn = document.getElementById('settings-btn');
      const settingsModal = document.getElementById('settings-modal');
      const settingsModalClose = document.getElementById('settings-modal-close');
      const settingsCancelBtn = document.getElementById('settings-cancel-btn');
      const settingsSaveBtn = document.getElementById('settings-save-btn');
      const searchInput = document.getElementById('search-input');
      const chatList = document.getElementById('chat-list');
      const chatItems = document.querySelectorAll('.chat-item');
      
      // Sample product data for the chat
      const productInfo = {
        title: "MacBook Pro 2020",
        price: "₹85,000",
        condition: "Like New",
        location: "Mumbai"
      };
      
      // Sample emojis
      const emojis = {
        "smileys-people": ["😀", "😃", "😄", "😁", "😆", "😅", "😂", "🤣", "😊", "😇", "🙂", "🙃", "😉", "😌", "😍", "🥰", "😘", "😗", "😙", "😚", "😋", "😛", "😝", "😜", "🤪", "🤨", "🧐", "🤓", "😎", "🤩", "🥳", "😏", "😒", "😞", "😔", "😟", "😕", "🙁", "☹️", "😣", "😖", "😫", "😩", "🥺", "😢", "😭", "😤", "😠", "😡", "🤬", "🤯", "😳", "🥵", "🥶", "😱", "😨", "😰", "😥", "😓", "🤗", "🤔", "🤭", "🤫", "🤥", "😶", "😐", "😑", "😬", "🙄", "😯", "😦", "😧", "😮", "😲", "🥱", "😴", "🤤", "😪", "😵", "🤐", "🥴", "🤢", "🤮", "🤧", "😷", "🤒", "🤕", "🤑", "🤠", "😈", "👿", "👹", "👺", "🤡", "💩", "👻", "💀", "☠️", "👽", "👾", "🤖", "🎃", "😺", "😸", "😹", "😻", "😼", "😽", "🙀", "😿", "😾", "👶", "🧒", "👦", "👧", "🧑", "👨", "🧔", "👨‍🦰", "👨‍🦱", "👨‍🦳", "👨‍🦲", "👩", "👩‍🦰", "👩‍🦱", "👩‍🦳", "👩‍🦲", "🧓", "👴", "👵", "🙍", "🙍‍♂️", "🙍‍♀️", "🙎", "🙎‍♂️", "🙎‍♀️", "🙅", "🙅‍♂️", "🙅‍♀️", "🙆", "🙆‍♂️", "🙆‍♀️", "💁", "💁‍♂️", "💁‍♀️", "🙋", "🙋‍♂️", "🙋‍♀️", "🧏", "🧏‍♂️", "🧏‍♀️", "🙇", "🙇‍♂️", "🙇‍♀️", "🤦", "🤦‍♂️", "🤦‍♀️", "🤷", "🤷‍♂️", "🤷‍♀️", "👨‍⚕️", "👩‍⚕️", "👨‍🎓", "👩‍🎓", "👨‍🏫", "👩‍🏫", "👨‍⚖️", "👩‍⚖️", "👨‍🌾", "👩‍🌾", "👨‍🍳", "👩‍🍳", "👨‍🔧", "👩‍🔧", "👨‍🏭", "👩‍🏭", "👨‍💼", "👩‍💼", "👨‍🔬", "👩‍🔬", "👨‍💻", "👩‍💻", "👨‍🎤", "👩‍🎤", "👨‍🎨", "👩‍🎨", "👨‍✈️", "👩‍✈️", "👨‍🚀", "👩‍🚀", "👨‍🚒", "👩‍🚒", "👮", "👮‍♂️", "👮‍♀️", "🕵️", "🕵️‍♂️", "🕵️‍♀️", "💂", "💂‍♂️", "💂‍♀️", "🥷", "👷", "👷‍♂️", "👷‍♀️", "🤴", "👸", "👳", "👳‍♂️", "👳‍♀️", "👲", "🧕", "🤵", "🤵‍♂️", "🤵‍♀️", "👰", "👰‍♂️", "👰‍♀️", "🤰", "🤱", "👩‍🍼", "👨‍🍼", "🧑‍🍼", "👼", "🎅", "🧑‍🎄", "🦸", "🦸‍♂️", "🦸‍♀️", "🦹", "🦹‍♂️", "🦹‍♀️", "🧙", "🧙‍♂️", "🧙‍♀️", "🧚", "🧚‍♂️", "🧚‍♀️", "🧛", "🧛‍♂️", "🧛‍♀️", "🧜", "🧜‍♂️", "🧜‍♀️", "🧝", "🧝‍♂️", "🧝‍♀️", "🧞", "🧞‍♂️", "🧞‍♀️", "🧟", "🧟‍♂️", "🧟‍♀️", "💆", "💆‍♂️", "💆‍♀️", "💇", "💇‍♂️", "💇‍♀️", "🚶", "🚶‍♂️", "🚶‍♀️", "🧍", "🧍‍♂️", "🧍‍♀️", "🧎", "🧎‍♂️", "🧎‍♀️", "👨‍🦯", "👩‍🦯", "🧑‍🦯", "👨‍🦼", "👩‍🦼", "🧑‍🦼", "👨‍🦽", "👩‍🦽", "🧑‍🦽", "🏃", "🏃‍♂️", "🏃‍♀️", "💃", "🕺", "🕴️", "👯", "👯‍♂️", "👯‍♀️", "🧖", "🧖‍♂️", "🧖‍♀️", "🧗", "🧗‍♂️", "🧗‍♀️", "🤺", "🏇", "⛷️", "🏂", "🏌️", "🏌️‍♂️", "🏌️‍♀️", "🏄", "🏄‍♂️", "🏄‍♀️", "🚣", "🚣‍♂️", "🚣‍♀️", "🏊", "🏊‍♂️", "🏊‍♀️", "⛹️", "⛹️‍♂️", "⛹️‍♀️", "🏋️", "🏋️‍♂️", "🏋️‍♀️", "🚴", "🚴‍♂️", "🚴‍♀️", "🚵", "🚵‍♂️", "🚵‍♀️", "🤸", "🤸‍♂️", "🤸‍♀️", "🤽", "🤽‍♂️", "🤽‍♀️", "🤾", "🤾‍♂️", "🤾‍♀️", "🤹", "🤹‍♂️", "🤹‍♀️", "🧘", "🧘‍♂️", "🧘‍♀️", "🛀", "🛌", "🧑‍🤝‍🧑", "👭", "👫", "👬", "💏", "💑", "👪", "🧑‍🤝‍🧑", "🗣️", "👤", "👥", "🫂", "👣", "🦰", "🦱", "🦳", "🦲", "🐵", "🐒", "🦍", "🦧", "🐶", "🐕", "🦮", "🐕‍🦺", "🐩", "🐺", "🦊", "🦝", "🐱", "🐈", "🐈‍⬛", "🦁", "🐯", "🐅", "🐆", "🐴", "🐎", "🦄", "🦓", "🦌", "🦬", "🐮", "🐂", "🐃", "🐄", "🐷", "🐖", "🐗", "🐽", "🐏", "🐑", "🐐", "🐪", "🐫", "🦙", "🦒", "🐘", "🦣", "🦏", "🦛", "🐭", "🐁", "🐀", "🐹", "🐰", "🐇", "🐿️", "🦫", "🦔", "🦇", "🐻", "🐻‍❄️", "🐨", "🐼", "🦥", "🦦", "🦨", "🦘", "🦡", "🐾", "🦃", "🐔", "🐓", "🐣", "🐤", "🐥", "🐦", "🐧", "🕊️", "🦅", "🦆", "🦢", "🦉", "🦤", "🪶", "🦩", "🦜", "🐸", "🐊", "🐢", "🦎", "🐍", "🐲", "🐉", "🦕", "🦖", "🐳", "🐋", "🐬", "🦭", "🐟", "🐠", "🐡", "🦈", "🐙", "🐚", "🐌", "🦋", "🐛", "🐜", "🐝", "🪲", "🐞", "🦗", "🪳", "🕷️", "🕸️", "🦂", "🦟", "🪰", "🪱", "🦠", "💐", "🌸", "💮", "🏵️", "🌹", "🥀", "🌺", "🌻", "🌼", "🌷", "🌱", "🪴", "🌲", "🌳", "🌴", "🌵", "🌾", "🌿", "☘️", "🍀", "🍁", "🍂", "🍃", "🍇", "🍈", "🍉", "🍊", "🍋", "🍌", "🍍", "🥭", "🍎", "🍏", "🍐", "🍑", "🍒", "🍓", "🫐", "🥝", "🍅", "🫒", "🥥", "🥑", "🍆", "🥔", "🥕", "🌽", "🌶️", "🫑", "🥒", "🥬", "🥦", "🧄", "🧅", "🍄", "🥜", "🫘", "🌰", "🍞", "🥐", "🥖", "🫓", "🥨", "🥯", "🥞", "🧇", "🧀", "🍖", "🍗", "🥩", "🥓", "🍔", "🍟", "🍕", "🌭", "🥪", "🌮", "🌯", "🫔", "🥙", "🧆", "🥚", "🍳", "🥘", "🍲", "🫕", "🥣", "🥗", "🍿", "🧈", "🧂", "🥫", "🍱", "🍘", "🍙", "🍚", "🍛", "🍜", "🍝", "🍠", "🍢", "🍣", "🍤", "🍥", "🥮", "🍡", "🥟", "🥠", "🥡", "🦀", "🦞", "🦐", "🦑", "🦪", "🍦", "🍧", "🍨", "🍩", "🍪", "🎂", "🍰", "🧁", "🥧", "🍫", "🍬", "🍭", "🍮", "🍯", "🍼", "🥛", "☕", "🫖", "🍵", "🍶", "🍾", "🍷", "🍸", "🍹", "🍺", "🍻", "🥂", "🥃", "🥤", "🧋", "🧃", "🧉", "🧊", "🥢", "🍽️", "🍴", "🥄", "🔪", "🏺"],
        "animals-nature": ["🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼", "🐨", "🐯", "🦁", "🐮", "🐷", "🐸", "🐵", "🐔", "🐧", "🐦", "🐤", "🦆", "🦅", "🦉", "🦇", "🐺", "🐗", "🐴", "🦄", "🐝", "🐛", "🦋", "🐌", "🐞", "🐜", "🦗", "🕷", "🦂", "🐢", "🐍", "🦎", "🦖", "🦕", "🐙", "🦑", "🦐", "🦀", "🐡", "🐠", "🐟", "🐬", "🐳", "🐋", "🦈", "🐊", "🐅", "🐆", "🦓", "🦍", "🦧", "🐘", "🦛", "🦏", "🐪", "🐫", "🦒", "🦘", "🐃", "🐂", "🐄", "🐎", "🐖", "🐏", "🐑", "🦙", "🐐", "🦌", "🐕", "🐩", "🦮", "🐕‍🦺", "🐈", "🐈‍⬛", "🐓", "🦃", "🦚", "🦜", "🦢", "🦩", "🕊", "🐇", "🦝", "🦨", "🦡", "🦦", "🦥", "🐁", "🐀", "🐿", "🦔", "🌵", "🎄", "🌲", "🌳", "🌴", "🌱", "🌿", "☘", "🍀", "🎍", "🎋", "🍃", "🍂", "🍁", "🍄", "🐚", "🌾", "💐", "🌷", "🌹", "🥀", "🌺", "🌸", "🌼", "🌻", "🌞", "🌝", "🌛", "🌜", "🌚", "🌕", "🌖", "🌗", "🌘", "🌑", "🌒", "🌓", "🌔", "🌙", "🌎", "🌍", "🌏", "🪐", "💫", "⭐", "🌟", "✨", "⚡", "☄", "💥", "🔥", "🌪", "🌈", "☀", "🌤", "⛅", "🌥", "☁", "🌦", "🌧", "⛈", "🌩", "🌨", "❄", "☃", "⛄", "🌬", "💨", "💧", "💦", "☔", "☂", "🌊", "🌫"],
        "food-drink": ["🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇", "🍓", "🫐", "🍈", "🍒", "🍑", "🥭", "🍍", "🥥", "🥝", "🍅", "🫒", "🥑", "🍆", "🥔", "🥕", "🌽", "🌶", "🫑", "🥒", "🥬", "🥦", "🧄", "🧅", "🍄", "🥜", "🫘", "🌰", "🍞", "🥐", "🥖", "🫓", "🥨", "🥯", "🥞", "🧇", "🧀", "🍖", "🍗", "🥩", "🥓", "🍔", "🍟", "🍕", "🌭", "🥪", "🌮", "🌯", "🫔", "🥙", "🧆", "🥚", "🍳", "🥘", "🍲", "🫕", "🥣", "🥗", "🍿", "🧈", "🧂", "🥫", "🍱", "🍘", "🍙", "🍚", "🍛", "🍜", "🍝", "🍠", "🍢", "🍣", "🍤", "🍥", "🥮", "🍡", "🥟", "🥠", "🥡", "🦀", "🦞", "🦐", "🦑", "🦪", "🍦", "🍧", "🍨", "🍩", "🍪", "🎂", "🍰", "🧁", "🥧", "🍫", "🍬", "🍭", "🍮", "🍯", "🍼", "🥛", "☕", "🫖", "🍵", "🍶", "🍾", "🍷", "🍸", "🍹", "🍺", "🍻", "🥂", "🥃", "🥤", "🧋", "🧃", "🧉", "🧊", "🥢", "🍽", "🍴", "🥄", "🔪", "🏺"]
      };

      // Populate emoji picker
      for (const category in emojis) {
        const container = document.getElementById(category);
        emojis[category].forEach(emoji => {
          const emojiElement = document.createElement('div');
          emojiElement.className = 'emoji';
          emojiElement.textContent = emoji;
          emojiElement.addEventListener('click', () => {
            messageInput.value += emoji;
            messageInput.focus();
          });
          container.appendChild(emojiElement);
        });
      }

      // Toggle emoji picker
      emojiBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        emojiPicker.classList.toggle('show');
        attachmentMenu.classList.remove('show');
      });

      // Toggle attachment menu
      attachmentBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        attachmentMenu.classList.toggle('show');
        emojiPicker.classList.remove('show');
      });

      // Toggle dropdown menu
      menuBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        dropdownMenu.classList.toggle('show');
      });

      // Close menus when clicking outside
      document.addEventListener('click', () => {
        emojiPicker.classList.remove('show');
        attachmentMenu.classList.remove('show');
        dropdownMenu.classList.remove('show');
      });

      // Prevent closing when clicking inside
      emojiPicker.addEventListener('click', (e) => e.stopPropagation());
      attachmentMenu.addEventListener('click', (e) => e.stopPropagation());
      dropdownMenu.addEventListener('click', (e) => e.stopPropagation());

      // Show typing indicator and receive response after 2 seconds
      function showTypingIndicator() {
        typingIndicator.style.display = 'flex';
        setTimeout(() => {
          typingIndicator.style.display = 'none';
          receiveMessage();
        }, 2000);
      }
      
      // Function to receive a message (simulated)
      function receiveMessage() {
        const messages = [
          "I can do ₹80,000 if you're interested.",
          "The laptop comes with original box and charger.",
          "I'm available for meetup at Andheri West.",
          "Here are the specs: 16GB RAM, 512GB SSD, i7 processor"
        ];
        
        const randomMessage = messages[Math.floor(Math.random() * messages.length)];
        
        const messageElement = document.createElement('div');
        messageElement.className = 'message received';
        messageElement.innerHTML = `
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              ${randomMessage}
            </div>
            <span class="message-time">${getCurrentTime()}</span>
          </div>
        `;
        
        messagesContainer.appendChild(messageElement);
        scrollToBottom();
      }
      
      // Function to send a message
      function sendMessage() {
        const messageText = messageInput.value.trim();
        if (messageText === '') return;
        
        const messageElement = document.createElement('div');
        messageElement.className = 'message sent';
        messageElement.innerHTML = `
          <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="You" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              ${messageText}
            </div>
            <span class="message-time">${getCurrentTime()} <span class="message-status">✓✓</span></span>
          </div>
        `;
        
        messagesContainer.appendChild(messageElement);
        messageInput.value = '';
        scrollToBottom();
        
        // Show typing indicator and receive response after 2 seconds
        if (messageText.toLowerCase().includes('price') || 
            messageText.toLowerCase().includes('cost')) {
          // Special response for price questions
          setTimeout(() => {
            const priceMessage = document.createElement('div');
            priceMessage.className = 'message received';
            priceMessage.innerHTML = `
              <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="message-avatar">
              <div class="message-content">
                <div class="message-bubble">
                  The listed price is ${productInfo.price}, but I'm open to reasonable offers. The condition is ${productInfo.condition}.
                </div>
                <span class="message-time">${getCurrentTime()}</span>
              </div>
            `;
            messagesContainer.appendChild(priceMessage);
            scrollToBottom();
          }, 2000);
        } else {
          showTypingIndicator();
        }
      }
      
      // Helper function to get current time in HH:MM AM/PM format
      function getCurrentTime() {
        const now = new Date();
        let hours = now.getHours();
        const minutes = now.getMinutes().toString().padStart(2, '0');
        const ampm = hours >= 12 ? 'PM' : 'AM';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        return `${hours}:${minutes} ${ampm}`;
      }
      
      // Scroll to bottom of messages container
      function scrollToBottom() {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      }
      
      // Event listeners
      sendBtn.addEventListener('click', sendMessage);
      
      messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          sendMessage();
        }
      });
      
      // Click handlers for chat items
      chatItems.forEach(item => {
        item.addEventListener('click', function() {
          chatItems.forEach(i => i.classList.remove('active'));
          this.classList.add('active');
          // In a real app, you would load the chat history here
          
          // Update chat header
          const chatName = this.querySelector('.chat-name').textContent;
          document.querySelector('.chat-user-info h3').textContent = chatName;
          
          // Clear messages container (except for typing indicator)
          const messages = Array.from(messagesContainer.querySelectorAll('.message'));
          messages.forEach(msg => msg.remove());
          
          // Add welcome message
          const welcomeMessage = document.createElement('div');
          welcomeMessage.className = 'message received';
          welcomeMessage.innerHTML = `
            <img src="${this.querySelector('.chat-avatar').src}" alt="User" class="message-avatar">
            <div class="message-content">
              <div class="message-bubble">
                Hi there! Let me know if you have any questions about the product.
              </div>
              <span class="message-time">${getCurrentTime()}</span>
            </div>
          `;
          messagesContainer.appendChild(welcomeMessage);
          scrollToBottom();
        });
      });
      
      // Search functionality
      searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        chatItems.forEach(item => {
          const name = item.querySelector('.chat-name').textContent.toLowerCase();
          const message = item.querySelector('.chat-message').textContent.toLowerCase();
          if (name.includes(searchTerm) || message.includes(searchTerm)) {
            item.style.display = 'flex';
          } else {
            item.style.display = 'none';
          }
        });
      });
      
      // Modal functionality
      editChatBtn.addEventListener('click', () => {
        editModal.classList.add('show');
      });
      
      editModalClose.addEventListener('click', () => {
        editModal.classList.remove('show');
      });
      
      editCancelBtn.addEventListener('click', () => {
        editModal.classList.remove('show');
      });
      
      editSaveBtn.addEventListener('click', () => {
        const newTitle = document.getElementById('chat-title').value;
        const notifications = document.getElementById('chat-notifications').value;
        const color = document.getElementById('chat-color').value;
        
        // In a real app, you would save these settings
        console.log('Chat settings saved:', { newTitle, notifications, color });
        
        // Update active chat title
        const activeChat = document.querySelector('.chat-item.active');
        if (activeChat) {
          activeChat.querySelector('.chat-name').textContent = newTitle;
          document.querySelector('.chat-user-info h3').textContent = newTitle;
        }
        
        editModal.classList.remove('show');
      });
      
      settingsBtn.addEventListener('click', () => {
        settingsModal.classList.add('show');
      });
      
      settingsModalClose.addEventListener('click', () => {
        settingsModal.classList.remove('show');
      });
      
      settingsCancelBtn.addEventListener('click', () => {
        settingsModal.classList.remove('show');
      });
      
      settingsSaveBtn.addEventListener('click', () => {
        const theme = document.getElementById('theme').value;
        const sound = document.getElementById('notification-sound').value;
        const history = document.getElementById('message-history').value;
        
        // In a real app, you would save these settings
        console.log('Settings saved:', { theme, sound, history });
        
        settingsModal.classList.remove('show');
      });
      
      // Dropdown menu actions
      document.getElementById('clear-chat').addEventListener('click', () => {
        const messages = Array.from(messagesContainer.querySelectorAll('.message'));
        messages.forEach(msg => msg.remove());
        dropdownMenu.classList.remove('show');
      });
      
      document.getElementById('mute-chat').addEventListener('click', () => {
        alert('Chat notifications muted');
        dropdownMenu.classList.remove('show');
      });
      
      document.getElementById('block-user').addEventListener('click', () => {
        if (confirm('Are you sure you want to block this user?')) {
          alert('User blocked');
          dropdownMenu.classList.remove('show');
        }
      });
      
      document.getElementById('report-user').addEventListener('click', () => {
        alert('User reported');
        dropdownMenu.classList.remove('show');
      });
      
      // Attachment options
      document.getElementById('attach-photo').addEventListener('click', () => {
        alert('Photo attachment option selected');
        attachmentMenu.classList.remove('show');
      });
      
      document.getElementById('attach-document').addEventListener('click', () => {
        alert('Document attachment option selected');
        attachmentMenu.classList.remove('show');
      });
      
      document.getElementById('attach-location').addEventListener('click', () => {
        alert('Location attachment option selected');
        attachmentMenu.classList.remove('show');
      });
      
      document.getElementById('attach-contact').addEventListener('click', () => {
        alert('Contact attachment option selected');
        attachmentMenu.classList.remove('show');
      });
      
      // Initial scroll to bottom
      scrollToBottom();
      
      // Simulate receiving a welcome message after 3 seconds
      setTimeout(() => {
        const welcomeMessage = document.createElement('div');
        welcomeMessage.className = 'message received';
        welcomeMessage.innerHTML = `
          <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="John" class="message-avatar">
          <div class="message-content">
            <div class="message-bubble">
              Hi there! I'm John, the seller of ${productInfo.title}. Let me know if you have any questions!
            </div>
            <span class="message-time">${getCurrentTime()}</span>
          </div>
        `;
        messagesContainer.appendChild(welcomeMessage);
        scrollToBottom();
      }, 3000);
    });
  </script>
</body>